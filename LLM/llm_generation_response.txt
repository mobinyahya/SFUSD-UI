{
  "Function_Code": '''
    def requested_function(self):
        if not (1 > score_dev > -1):
            return
        math_scores = self.units_data["math_score"].fillna(value=0)
        school_average = sum(math_scores) / sum(self.schools)
        
        for z in range(self.Z):
            zone_sum = gp.quicksum(
                [math_scores[v] * self.x[v, z] for v in self.valid_units_per_zone[z]]
            )
            zone_schools = gp.quicksum(
                [self.schools[v] * self.x[v, z] for v in self.valid_units_per_zone[z]]  
            )
            
            self.m.addConstr(zone_sum >= (1 - score_dev) * school_average * zone_schools)
            self.m.addConstr(zone_sum <= (1 + score_dev) * school_average * zone_schools)
    ''',
  "Latex_Formula": {
    "Variables": {
      "MathScore_u": "Sum of math scores for schools in unit $u$, $\\forall u \\in U$",
      "\\overline{MathScore}": "Average math score across all schools in the district"
    },
    "Formula": "(1 - 0.2) \\cdot \\overline{MathScore} \\cdot \\sum_{u \\in U} Sch_u x_{u,z} \\leq \\sum_{u \\in U} MathScore_u x_{u,z} \\leq  (1 + 0.2) \\cdot \\overline{MathScore} \\cdot \\sum_{u \\in U} Sch_u x_{u,z} \\quad \\forall z \\in Z"
  }
}